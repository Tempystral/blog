---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import { Icon } from "astro-icon/components";
import Divider from "../Divider.astro";

interface Props {
	content: CollectionEntry<"post">;
}

const {
	content: { data },
} = Astro.props;

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---
<!-- Move infobox to sidebar on wider displays? -->
<!-- Whole screen amber and content in a lighter box? Background clip mode to prevent blending issues? -->
<style>
  #title-box {
    grid-template-areas: "title title title title title props props";
  }
</style>
{
	data.coverImage && (
		<div class="mb-6 aspect-[16/9]">
			<Image
				alt={data.coverImage.alt}
				class="object-cover"
				fetchpriority="high"
				loading="eager"
				src={data.coverImage.src}
			/>
		</div>
	)
}
{data.draft ? <span class="text-base text-red-500">(Draft)</span> : null}
<div id="title-box" class="grid grid-cols-7 gap-2 justify-between items-end">
  <div style="grid-area: title;">
    <h1 class="title text-balance mb-3">
      {data.title}
    </h1>
    { (data.description && <h2 id="subtitle" class="subtitle text-balance bg-bgColor/50 rounded-lg px-2 pb-1 text-2xl font-sans w-fit">
      { data.description }
    </h2>)
    }
  </div>
	<div id="property-list" style="grid-area: props;" class="flex h-fit bg-bgColor/50 p-2 rounded-md">
      <span class="rotate-180 font-display text-center text-4xl -ml-2 w-10 font-stretch-condensed" style="writing-mode: vertical-rl; text-orientation: mixed;">
        PROPS
      </span>
		<dl>
			<dt class="font-bold font-mono">
        <Icon
          aria-hidden="true"
          class="inline -me-1"
          focusable="false"
          name="mdi:calendar-month"
          size="16"
        />
        Published
      </dt>
			<dd class="mb-1"><FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /></dd>
      {
        data.updatedDate && (
          <dt class="font-bold font-mono">
            <Icon
              aria-hidden="true"
              class="inline -me-1"
              focusable="false"
              name="mdi:calendar-edit"
              size="16"
            />
            Updated
            </dt>
          <dd class="mb-1">
            <FormattedDate date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
          </dd>
        )
      }

      {
        !!data.tags?.length && (
          <dt class="font-bold font-mono">
            <Icon
              aria-hidden="true"
              class="inline -me-1"
              focusable="false"
              name="mdi:tag-multiple"
              size="16"
            />
            Tags
          </dt>
          <dd class="mb-1">
            <div class="mt-2">
              {data.tags.map((tag, i) => (
                <>
                  {/* prettier-ignore */}
                  <span class="contents">
                    <a aria-label={`View more blogs with the tag ${tag}`} class="cactus-link inline-block before:content-['#']" data-pagefind-filter="tag" href={`/tags/${tag}/`}>{tag}
                    </a>{i < data.tags.length - 1 && ", "}
                  </span>
                </>
              ))}
            </div>
          </dd>
        )
      }
		</dl>
	</div>
</div>
<Divider />
<!-- <div class="flex flex-wrap items-center gap-x-3 gap-y-2">
	<p class="font-semibold">
		<FormattedDate date={data.publishDate} dateTimeOptions={dateTimeOptions} /> /{" "}
		{/* @ts-ignore:next-line. TODO: add reading time to collection schema? */}
		{data.readingTime}
	</p>
	{
		data.updatedDate && (
			<span class="rounded-lg bg-quote/5 px-2 py-1 text-quote">
				Updated:
				<FormattedDate class="ms-1" date={data.updatedDate} dateTimeOptions={dateTimeOptions} />
			</span>
		)
	}
</div> -->

